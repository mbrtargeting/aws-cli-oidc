name: Go
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed
    branches:
      - master

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set up PATH
        run: echo "::add-path::$(go env GOPATH)/bin"

      - name: Set up GolangCI-Lint 1.23.6
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.23.6

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Lint
        run: make lint

      - name: Test
        run: make test

      - name: Build
        run: make cross-build && make dist

      - name: Create Release
        id: create_release
        if: github.event.pull_request.merged
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: rel-${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset-windows
        if: github.event.pull_request.merged
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/aws-cli-oidc-windows-amd64.zip
          asset_name: aws-cli-oidc-${{ github.run_number }}-windows-amd64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset
        id: upload-release-asset-linux
        if: github.event.pull_request.merged
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/aws-cli-oidc-linux-amd64.zip
          asset_name: aws-cli-oidc-${{ github.run_number }}-linux-amd64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset
        id: upload-release-asset-darwin
        if: github.event.pull_request.merged
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/aws-cli-oidc-darwin-amd64.zip
          asset_name: aws-cli-oidc-${{ github.run_number }}-darwin-amd64.zip
          asset_content_type: application/zip
